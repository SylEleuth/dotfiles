# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export ZSH_COMPDUMP=$ZSH/cache/zcompdump/.zcompdump-$HOST

export ZSH="$HOME/.oh-my-zsh"

source ~/.zplug/init.zsh

zplug "zplug/zplug", hook-build:'zplug --self-manage'
zplug "romkatv/powerlevel10k", as:theme, depth:1
# zplug "plugins/git", from:oh-my-zsh
zplug "plugins/git-extras", from:oh-my-zsh
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-completions"
# zplug "zpm-zsh/ls"
zplug "b4b4r07/enhancd", use:init.sh
# zplug "MichaelAquilina/zsh-auto-notify"
zplug "junegunn/fzf"
zplug "clvv/fasd"
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "ellie/atuin"                                       # shell history
zplug 'wfxr/forgit'
zplug 'xPMo/zsh-ls-colors'

if ! zplug check; then
    zplug install
fi

zplug load

if zplug check b4b4r07/enhancd; then
    # setting if enhancd is available
    export ENHANCD_FILTER=fzf-tmux
fi

source ~/.zplug/repos/b4b4r07/enhancd/init.sh

ENHANCD_DIR=$HOME/.zplug/repos/b4b4r07/enhancd/

ZSH_THEME="powerlevel10k/powerlevel10k"

ZLE_RPROMPT_INDENT=0

HISTSIZE=999999999
SAVEHIST=$HISTSIZE
HISTFILE=$HOME'/.zsh_history'

# TERM=xterm-256color
if [[ $TERM == xterm ]]; then TERM=xterm-256color; fi

autoload -U compinit && compinit

source $ZSH/oh-my-zsh.sh

compinit -d ~/.cache/zsh/zcompdump-$ZSH_VERSION

# NPM packages
NPM_PACKAGES="${HOME}/.npm/packages"

export PATH="$PATH:$NPM_PACKAGES/bin"

# Preserve MANPATH if you already defined it somewhere in your config.
# Otherwise, fall back to `manpath` so we can inherit from `/etc/manpath`.
export MANPATH="${MANPATH-$(manpath)}:$NPM_PACKAGES/share/man"

# PIP packages
export PATH="$PATH:$HOME/.local/bin"

# Rust Cargo binaries
export PATH="$PATH:$HOME/.cargo/bin"

# export MANPAGER="vim -M +MANPAGER -"

# Vim settings
# bindkey -v

# PAGER="nvim"
VISUAL="nvim"
EDITOR="nvim"

# exa settings
export EXA_ICON_SPACING=2
source $HOME/.config/zsh/lscolors.sh
# export EXA_COLORS="*.py=38;5;12:*.pdf=38;5;13:*.mp3=38;5;6:*.html=38;5;2:*.bak=38;5;7"
# export LS_COLORS='fi=00:mi=00:mh=00:ln=01;36:or=01;31:di=01;34:ow=04;01;34:st=34:tw=04;34:'
# LS_COLORS+='pi=01;33:so=01;33:do=01;33:bd=01;33:cd=01;33:su=01;35:sg=01;35:ca=01;35:ex=01;32'
# export LSCOLORS='ExGxDxDxCxDxDxFxFxexEx'

# [ -z $LS_COLORS ] && eval `dircolors -b ~/.gruvbox.dir_colors`
# zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# function nvim {
#   BACKGROUND=$(xtermcontrol --get-bg)

#   # if [[ "$BACKGROUND" == "rgb:ebeb/dbdb/b2b2" ]]; then
#   if [[ "$BACKGROUND" == "rgb:2828/2828/2828" ]]; then
#     nvim
#   else
#     nvim -u $HOME/.config/nvim/init-light.lua
#   fi
# }

# Forgit options
export FORGIT_FZF_DEFAULT_OPTS="
--cycle
--reverse
--height '96%'
"

# Atuin settings
export ATUIN_NOBIND="true"
eval "$(atuin init zsh)"

# depends on terminal mode
bindkey '^[[A' _atuin_search_widget
bindkey '^[OA' _atuin_search_widget

# fasd settings
eval "$(fasd --init auto)"

# BAT
export BAT_THEME="gruvbox-dark"

# Pacman TUI function
# credits to https://github.com/IBArbitrary/dotfiles/blob/master/.config/fish/config.fish#L72-L78
# Search packages with 'fzf'
function pacs {
    pacman -Slq | fzf --prompt 'pacman> ' \
        --header 'Install packages.
        <c-p>: pacman, <c-a>: aur' \
        --bind 'ctrl-p:change-prompt(pacman> )+reload(pacman -Slq)' \
        --bind 'ctrl-a:change-prompt(aur> )+reload(yay -Slq)' \
        --multi --height=100% --preview 'yay -Si {1}' \
        --preview-window=right,65% --layout=reverse | xargs -ro yay -S
    pacman -Qqe >~/.config/pac-kages.txt
}

# Search and remove locally installed packages with 'fzf'
function pacr {
    pacman -Qq | fzf --prompt 'all> ' \
        --header='Remove packages.
        <c-a>: all, <c-e>: explicit, <c-y>: aur-explicit' \
        --bind 'ctrl-a:change-prompt(all> )+reload(pacman -Qq)' \
        --bind 'ctrl-e:change-prompt(exp> )+reload(pacman -Qe)' \
        --bind 'ctrl-y:change-prompt(aur> )+reload(pacman -Qm)' \
        --multi --height=100% --preview 'yay -Si {1}' \
        --preview-window=right,65% --layout=reverse | xargs -ro sudo pacman -Rsn
    pacman -Qqe >~/.config/packages.txt
}

# Aliases
alias vi=nvim
# alias vim=nvim
alias vv="nvim --listen /tmp/nvimsocket"
alias vvl="nvim --listen /tmp/nvimsocket -u $HOME/.config/nvim/init-light.lua"
alias v="nvim"
alias vl="nvim -u $HOME/.config/nvim/init-light.lua"

alias ..='cd ..'
alias ...='cd ../..'
alias l="exa --icons -lh --git --sort=type --time-style=long-iso --color=always"
alias ll="exa --icons -lah --git --sort=type --time-style=long-iso --color=alywas"
alias ls="exa --icons --git --color=always"
alias rm="rm -i"
alias dl="cd ~/Downloads"
alias co="cd ~/Code"
alias rip="yt-dlp"
alias ripau="yt-dlp --progress --verbose --extract-audio --audio-format mp3"
alias doom="~/.emacs.d/bin/doom"
alias comp="setsid plasmashell --replace"
alias gs='git status --column'
alias gsm="git status --short | grep '^\s.'"
alias gsu="git status --short | grep '^??'"
alias gss="git status --short | grep '^[MARCD]'"
alias gcm="git commit -m"
alias fxzip='zip -r ~/Downloads/firefox.zip ~/.mozilla'
alias pipup='pip freeze --user | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip install --user -U'
alias upd='zplug update && omz update'
alias matrix="cmatrix -b -u 8 -C cyan"
alias colors='~/Git/dotfiles/scripts/colors/showcolors'
alias st="speedtest --no-upload --single"
alias bup="sh ~/Dropbox/backup.sh"
alias grep='grep --color=auto'
# alias v="~/.config/vifm/scripts/vifmrun ."

[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh
