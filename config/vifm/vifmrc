" vim: filetype=vifm:foldmethod=marker:foldlevel=0

" ----------   GENERAL SEETINGS   ----------

set vicmd=nvim
set syscalls
set trash
set history=1000
set nofollowlinks
set sortnumbers
set sort=iname
set undolevels=1000
set novimhelp
" set runexec
set wildmenu
set wildstyle=popup
set ignorecase
set smartcase
set nohlsearch
set incsearch
set scrolloff=4
set tabstop=2
set dotfiles
set slowfs=curlftpfs
set dotdirs=
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,phistory,fhistory,dirstack,registers,bookmarks,bmarks,tabs
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers
set milleroptions="lsize:15,csize:35,rsize:50,rpreview:all"
set timefmt=%d\ %b\ %Y\ %H:%M:%S
set viewcolumns=-{fileroot}.,7{fileext},7{size}

colorscheme gruvbox

" Icons
source ~/.config/vifm/scripts/Icons

" Statusline, tabline, rulerformat
source ~/.config/vifm/scripts/Powerline.vim


" -----------   FILE VIEWERS AND OPENERS   ----------

fileviewer <text/*> bat %c

" Pdf
filextype *.pdf zathura %c %i &, apvlv %c, xpdf %c

" PostScript
filextype *.ps,*.eps,*.ps.gz zathura %f

" Djvu
filextype *.djvu zathura %f &

" Cbr
filextype *.cbr,*.cbz zathura %c %i &

" Epub
filextype *.epub zathura %f &

" Audio
filextype *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus,*aac mpv %f &
fileviewer *.mp3 mp3info

" Video
filextype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,*.ogg,*.fl[icv],*.m2v,*.mov,*.webm,*.mts,*.m4v,*.r[am],*.qt,*.divx,*.as[fx],*.rmvb,*.ogm,*webm
    \ smplayer %c %i %f &,
fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,*.ogg,*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,*.as[fx]
    \ ffprobe -pretty %c 2>&1

" Web
filextype *.html,*.htm firefox %f &

" Object
filextype *.o nm %f | less

" Man page
filextype *.[1-8] man ./%c
fileviewer *.[1-8] man ./%c | col -b

" Images
filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*webp,*.xpm,*.svg,*.svgz gwenview %c %i &
fileviewer {*.bmp,*.jpg,*.jpeg,*.png,*.xpm,*.gif,*.webp}
    \ kitten icat --silent --transfer-mode=file --place=%pwx%ph@%pxx%py %c >/dev/tty </dev/tty %N
    \ %pc
    \ kitten icat --clear --silent >/dev/tty </dev/tty %N

" MD5
filetype *.md5 md5sum -c %f %S,

" SHA1
filetype *.sha1 sha1sum -c %f %S,

" SHA256
filetype *.sha256 sha256sum -c %f %S

" SHA512
filetype *.sha512 sha512sum -c %f %S

" GPG signature
filetype *.asc !!gpg --verify %c

" Torrent
filetype *.torrent qbittorrent %f &
fileviewer *.torrent dumptorrent -v %c

" FuseZipMount
filextype *.zip,*.jar,*.war,*.ear,*.oxt,*.apkg
    \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
    \ zip -sf %c | less,
    \ tar -xf %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c

" ArchiveMount
filextype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz
    \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.txz,*.txz xz --list %c
fileviewer *.tar tar -tf %c

" Rar2FsMount and rar archives
filetype *.rar FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR
fileviewer *.rar unrar v %c

" IsoMount
filetype *.iso FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR

" SshMount
filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND

" FtpMount
filetype *.ftp FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND

" Fuse7z and 7z archives
filetype *.7z FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR
fileviewer *.7z 7z l %c

" Office files
filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx libreoffice %f &
fileviewer *.doc catdoc %c
fileviewer *.docx, docx2txt.pl %f -

" Qt projects
filextype *.pro qtcreator %f &

" 256-color terminal
fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
fileviewer *.py highlight -O xterm256 -s dante --syntax py %c
fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c


" ----------   COMMANDS DEFINITIONS   ----------

" Toggle between color schemes
" command! changetheme
"       \ :if $COLORSCHEME == 'Default'
"       \|     let $COLORSCHEME = 'Default-256'
"       \|     colorscheme Default-256
"       \| else
"       \|     let $COLORSCHEME = 'Default'
"       \|     colorscheme Default
"       \| endif

" fzf finder from https://github.com/vifm/vifm/issues/279#issuecomment-1001788619
" -------------------------------------------------------------------------------
command! fzfreadbmarks :exe "normal! :bmarks\r:write ~/.config/vifm/bookmarks\rq"
" command! fdcddir     :execute 'cd "'.term('fd -HE ''.git'' -t d . | fzf 2>/dev/tty').'"'
command! fdcddir       :set noquickview | :execute 'goto' fnameescape(term('fd . %a --hidden -E .git -E .stversions -t d | fzf 2> /dev/tty'))
command! fdcdfile      :set noquickview | :execute 'goto' fnameescape(term('fd . %a --hidden -E .git -E .stversions -t f | fzf 2> /dev/tty'))
command! fzfbmark      :execute 'bmark "' .system('echo "${PWD##*/}"').'"'
command! fzfbmarks     :set noquickview | :execute 'goto' fnameescape(term('cat ~/.config/vifm/bookmarks | fzf 2>/dev/tty | sed "s/:.*//" '))
" command! fzfbmarks   :execute 'cd "'.term('cat ~/.config/vifm/bookmarks | fzf 2>/dev/tty | sed "s/:.*//" ').'"'
command! fzfmarks      :fzfreadbmarks | fzfbmarks

" flatten current directory, ie list all files in directory and its
" subdirectories and directories of subdirectories etc
command flatall :execute '!find -not -path "*/\.*" 2>/dev/null %%U'

" the same as flatten but display only files
command! flatonly :execute '!find -type f -not -path "*/\.*" 2>/dev/null %%U'

" the same as flatten but display only directories
command! flatdir :execute '!find -type d -not -path "*/\.*" %%U'

command! togglefilesinfo
    \ : if &viewcolumns == '-{fileroot}.,7{fileext},7{size}'
    \ |   set viewcolumns=-{fileroot}.,7{fileext}.,12{perms},22{mtime},7{size}
    \ |   echo 'Files information: detailed'
    \ | else
    \ |   set viewcolumns=-{fileroot}.,7{fileext},7{size}
    \ |   echo 'Files information: brief'
    \ | endif

command! df df -h %m 2> /dev/null
command! diff nvim -d %f %F
command! zip zip -r %f.zip %f
command! unzip unzip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep nvim "+grep %a"
command! reload :write | restart

" show volumes
command! mounts /bin/lsblk -no MOUNTPOINT %u

"create a new file
command newfile touch "%a"

" ----------   KEY MAPPINGS   ----------

nnoremap ; :
nnoremap QQ :qall<cr>
nnoremap \r :reload<cr>
nnoremap p :put &<cr>

nnoremap <f1> :sync<cr>
nnoremap <f2> :rename<cr>
nnoremap <f3> :edit<cr>
nnoremap <f4> :newfile<space>
nnoremap <f5> :copy &<cr>
nnoremap <f6> :move &<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :mkcd<space>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>gv
vnoremap w :view<cr>gv

" Open file in existing instance of neovim
nnoremap o :!nvr --remote %f<cr>
" Open file in new instance of neovim
nnoremap O :!nvim %f<cr>

" Mappings for faster renaming
nnoremap ce cw<c-a>
nnoremap cc cw<c-u>

" Open console in current directory
nnoremap \t :!kitty &<cr>

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap \c :write | edit $MYVIFMRC | restart<cr>
" Open neovim to edit vifmrc
nnoremap \C :!nvr --remote $MYVIFMRC &<cr>

" Tabs options
nnoremap <S-Left> :tabprevious<cr>
nnoremap <S-Right> :tabnext<cr>
nnoremap Tt :tabnew<cr>
nnoremap Tr :tabname<space>
nnoremap \q :tabclose<cr>

" trash options
noremap `x :empty<cr>
noremap <silent> `c :lstrash<cr>
noremap <silent> `v :trashes<cr>

" calculate size of the directory, select it and move one line down
nnoremap <space> gAtj

" select all
nnoremap <C-a> ggvG<cr>

nnoremap fd :fdcddir<cr>
nnoremap ff :fdcdfile<cr>

nnoremap fa :flatall<cr>
nnoremap fo :flatonly<cr>
nnoremap fi :flatdir<cr>

nnoremap bb :fzfmarks<cr>
nnoremap bm :fzfbmark<cr>

nnoremap \h :history dir<cr>
nnoremap \i :history input<cr>
nnoremap \j :history search<cr>

nnoremap A :histprev<cr>
nnoremap D :histnext<cr>

" yank current directory path into the clipboard
nnoremap yd :!echo -n %d | xclip -selection clipboard %i<cr>:echo expand('%"d') "is yanked to clipboard"<cr>

" yank current file path into the clipboard
nnoremap yf :!echo -n %c:p | xclip -selection clipboard %i<cr>:echo expand('%"c:p') "is yanked to clipboard"<cr>

" yank current filename without path into the clipboard
nnoremap yn :!echo -n %c | xclip -selection clipboard %i<cr>:echo expand('%"c') "is yanked to clipboard"<cr>

" yank root of current file's name into the clipboard
nnoremap yr :!echo -n %c:r | xclip -selection clipboard %i<cr>:echo expand('%"c:r') "is yanked to clipboard"<cr>

nnoremap \p :cd %D<cr>

nnoremap \m :set millerview<cr>:only<cr>
nnoremap \l :set millerview!<cr>:vsplit<cr>

nnoremap \j :jobs<cr>

nnoremap \w :togglefilesinfo<cr>

nnoremap \d :mounts<cr>

nnoremap \s :sync<cr>
